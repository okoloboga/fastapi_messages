server {
    # Настраиваем сервер на прослушивание порта 80
    listen 80;
    server_name localhost;  # Имя сервера (может быть изменено на нужное доменное имя)

    # Увеличиваем таймауты для проксирования запросов к бэкэнду
    proxy_connect_timeout 60s;  # Время ожидания соединения с сервером
    proxy_read_timeout 60s;     # Время ожидания ответа от сервера
    proxy_send_timeout 60s;     # Время ожидания отправки данных серверу

    # Обработка статических файлов для фронтэнда
    location / {
        root /usr/share/nginx/html;  # Директория, где хранятся статические файлы фронтэнда
        index index.html;  # Основной файл для отображения
        try_files $uri $uri/ /index.html;  # Попытка найти файл по URI, иначе возвращаем index.html
    }

    # Проксирование запросов к бэкэнду (API)
    location /api {
        proxy_pass http://backend:8000;  # Прокси запросы на контейнер backend
        proxy_set_header Host $host;  # Устанавливаем заголовок Host
        proxy_set_header X-Real-IP $remote_addr;  # Передаем реальный IP клиента
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Передаем IP через цепочку прокси
        proxy_set_header X-Forwarded-Proto $scheme;  # Устанавливаем схему (http или https)
    }

    # Проксирование WebSocket соединений к бэкэнду
    location /api/ws/ {
        proxy_pass http://backend:8000;  # Прокси запросы на контейнер backend
        proxy_http_version 1.1;  # Используем HTTP 1.1 для поддержки WebSocket
        proxy_set_header Upgrade $http_upgrade;  # Устанавливаем заголовок Upgrade для WebSocket
        proxy_set_header Connection "Upgrade";  # Устанавливаем заголовок Connection для WebSocket
        proxy_set_header Host $host;  # Устанавливаем заголовок Host
        proxy_cache_bypass $http_upgrade;  # Отключаем кеширование для WebSocket соединений
    }

    # Проксирование для документации Swagger и OpenAPI (документация FastAPI)
    location /docs {
        proxy_pass http://backend:8000/docs;  # Прокси запросы на документацию Swagger
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проксирование для ReDoc (альтернативный интерфейс документации OpenAPI)
    location /redoc {
        proxy_pass http://backend:8000/redoc;  # Прокси запросы на ReDoc документацию
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проксирование для файла openapi.json (описание API)
    location /openapi.json {
        proxy_pass http://backend:8000/openapi.json;  # Прокси запросы на openapi.json для описания API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
